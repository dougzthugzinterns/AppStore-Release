// This file has been autogenerated from parsing an Objective-C header file added in Xcode.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using MonoTouch.CoreGraphics;

namespace FrameWorkApp
{
	public partial class TripLogScreen : UITableViewController
	{
		Trip[] tripHistory;

		public TripLogScreen (IntPtr handle) : base (handle)
		{
			tripHistory =  new SDMFileManager().readDataFromTripLogFile();
		}
		public override UIInterfaceOrientationMask GetSupportedInterfaceOrientations ()
		{
			return UIInterfaceOrientationMask.Portrait;
		}

		//Update Trip Log Table
		private void updateTripLogTableView(){
			tripLogTableViewOutlet.Source = new TableSource (tripHistory);
			tripLogTableViewOutlet.ReloadData ();
			//set text color

		}
		public override void ViewDidLoad (){
			//Load each Trip to Display

			//Adding Clear button to top naviation
			this.NavigationItem.SetRightBarButtonItem (
				new UIBarButtonItem ("Clear History"
			                     , UIBarButtonItemStyle.Plain
			                     , (sender,args) => {
				UIAlertView newAlert=new UIAlertView("Clear Trip History", "Are you sure you want to clear the trip history?", null, "No", "Yes");
				newAlert.Clicked += (object sender2, UIButtonEventArgs e) => {
					if(e.ButtonIndex==1){
						//If Yes Button is Hit
						new SDMFileManager().clearTripHistory();
						tripHistory = new Trip[0];
						updateTripLogTableView ();     
					}
				};
				newAlert.Show ();

			})
				, true);

			updateTripLogTableView();
		}

		public override void PrepareForSegue (UIStoryboardSegue segue, NSObject sender)
		{
			Console.WriteLine ("SEGUE!!!!! " + segue.Identifier);
			if (segue.Identifier == "detailSegue") { // set in Storyboard
				var navctlr = segue.DestinationViewController as TripLogDetailScreen;
				if (navctlr != null) {
					var source = TableView.Source as TableSource;
					var rowPath = TableView.IndexPathForSelectedRow;
					var item = source.GetItem(rowPath.Row);
					navctlr.SetTask (this, item); // to be defined on the TaskDetailViewController

				}
			}
		}

		public override void ViewDidUnload(){
			base.ViewDidUnload ();
			//Remove Clear button on Top Navigation 
			this.NavigationItem.SetRightBarButtonItem(null, false);
		}
	}
}
