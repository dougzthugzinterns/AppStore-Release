// This file has been autogenerated from parsing an Objective-C header file added in Xcode.
using System;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using MonoTouch.Social;
using MonoTouch.AudioToolbox;

namespace FrameWorkApp
{
	public partial class StatsScreen : UIViewController
	{
		private SystemSound sound;

		SDMFileManager fileManager = new SDMFileManager ();
		User currentUser;

		public StatsScreen (IntPtr handle) : base (handle)
		{
			currentUser = fileManager.readUserFile ();
		}

		public override UIInterfaceOrientationMask GetSupportedInterfaceOrientations ()
		{
			return UIInterfaceOrientationMask.Portrait;
		}

		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);
			if(MainViewController.hasJustUnlockedAchievement){
				this.badgeNotification.SetImage (UIImage.FromFile ("BadgesNotifications.png"),UIControlState.Normal);
			}
			else{
				this.badgeNotification.SetImage(UIImage.FromFile("BadgesOff.png"), UIControlState.Normal);
			}
		}
		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			totalDistanceLabel.Text = currentUser.TotalDistance.ToString ("0.0");
			totalHardStartsLabel.Text = currentUser.TotalHardStarts.ToString ();
			totalHardStopsLabel.Text = currentUser.TotalHardStops.ToString ();
			totalHardTurnsLabel.Text = currentUser.TotalHardTurns.ToString ();
			totalPointsLabel.Text = currentUser.TotalPoints.ToString ();

			if (currentUser.Rank.ToString().Equals("Beginner")) {
				this.rankView.Image = UIImage.FromFile ("ACHIEVEMENTS-23.png");
			}

			else if (currentUser.Rank.ToString().Equals("Rookie")) {
				this.rankView.Image = UIImage.FromFile ("ACHIEVEMENTS-24.png");
			}

			else if (currentUser.Rank.ToString().Equals("Pro")) {
				this.rankView.Image = UIImage.FromFile ("ACHIVEMENTS-20.png");
			}

			else if (currentUser.Rank.ToString().Equals("All-Star")) {
				this.rankView.Image = UIImage.FromFile ("ACHIEVEMENTS-21.png");
			}

			else if (currentUser.Rank.ToString().Equals("Veteran")) {
				this.rankView.Image = UIImage.FromFile ("ACHIEVEMENTS-22.png");
			}


			shareButton.TouchUpInside += (sender, e) => {
				SLComposeViewController slComposer;
				if (SLComposeViewController.IsAvailable (SLServiceKind.Facebook)) {
					//Native Posting Only
					slComposer = SLComposeViewController.FromService (SLServiceType.Facebook);
					slComposer.SetInitialText ("Look at how awesome of a driver I am since using the Safe Driving Mate: "
					                           +"\nTotal Points: "+currentUser.TotalPoints
					                           +"\nTotal Hard Stops: "+currentUser.TotalHardStops
					                           +"\nTotal Hard Starts:"+currentUser.TotalHardStarts
					                           +"\nTotal Hard Turns:"+currentUser.TotalHardTurns);
					//slComposer.AddUrl (new NSUrl("http://google.com"));
					slComposer.CompletionHandler += (result) => {
						InvokeOnMainThread (() => {
							//DismissViewController (true, null);

						});
					};

					PresentViewController (slComposer, true, null);
				}

			};

		}

		partial void toInfo (NSObject sender)
		{
			MainNavigationController.goInfo = true;
			DismissViewController(false,null);
		}
		partial void toStats (NSObject sender)
		{
			MainNavigationController.goStats = true;
			DismissViewController(false,null);
		}
		partial void toTrip (NSObject sender)
		{
			MainNavigationController.goTrip = true;
			DismissViewController(false,null);
		}
		partial void toTrophies (NSObject sender)
		{
			MainNavigationController.goTrophies = true;
			DismissViewController(false,null);
		}
		partial void shareButtonSound (NSObject sender)
		{
			if (MainViewController.isAudioOn) {
				//enable audio
				AudioSession.Initialize ();


				//load the sound
				sound = SystemSound.FromFile ("Sounds/Pop.aiff");

				sound.PlaySystemSound ();
			}

		}
	}
}